{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:react/recommended",
        "airbnb"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "react-hooks",
        "@typescript-eslint"
    ],
    "rules": {
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "error",
        "react/require-default-props": "off",
        
        // Удобство
        "no-continue": "off",
        "react/jsx-no-bind": [
            "error",
            {
                "ignoreDOMComponents": false,
                "ignoreRefs": false,
                "allowArrowFunctions": true,
                "allowFunctions": true, // <<< ====
                "allowBind": false
            }
        ],
        
        // Позволяет сократить длину строки для удовлетворения правилу ESLint на ограничения длины.
        "implicit-arrow-linebreak": "off",

        // Позволяет "мутабельно" изменять state в createSlice посредством Immer.
        "no-param-reassign": ["error",
            { 
                "props": true, 
                "ignorePropertyModificationsFor": ["state"]
            }
        ],

        // Авто фокус при создании задач и их списков.
        //   В соответствии с логикой работы Trello
        "jsx-a11y/no-autofocus": "off",

        // Проект на Typescript
        //   Проблема возникла при использовании типа JSX. ESLint не видит JSX в файлах .tsx,
        //   https://stackoverflow.com/questions/64170868/why-eslint-consider-jsx-or-some-react-types-undefined-since-upgrade-typescript
        "no-undef": "off",

        // Отключение "no-unused-vars" для использование интерфейсов
        //   Интерфейсы используются для props во всех компонентах
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "error",

        // Разрешение конфликта eslint и tsc.
        //   При импорте модулей eslint требует .tsx, а tsc не позволяет поставить .tsx
        "import/extensions": [
            "warn",
            {
                "tsx": "never"
            }
        ],
        // Разрешить использовать синтаксис jsx в .tsx файлах.
        "react/jsx-filename-extension": [
            "off",
            {
                "allow": "as-needed"
            }
        ]
    },
    "ignorePatterns":[
        "**/*.css",
        "**/*.json",
        "**/*.jsonc",
        "*.js"
    ],
    "settings": {
        "import/resolver": {
            "node": {
                "extensions": [
                    ".ts",
                    ".js",
                    ".tsx",
                    ".jsx"
                ]
            }
        }
    }
}
